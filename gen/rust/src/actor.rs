// @generated
// This file is @generated by prost-build.
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct CacheEvictMsg {
    #[prost(int32, tag="1")]
    pub cache_type: i32,
    #[prost(enumeration="CacheEvictType", tag="2")]
    pub evict_type: i32,
    #[prost(string, tag="3")]
    pub key: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct UserLogoutMsg {
    #[prost(enumeration="LogoutType", tag="1")]
    pub logout_type: i32,
    #[prost(string, tag="2")]
    pub access_token: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct EntityChangedMsg {
    #[prost(string, tag="1")]
    pub entity_type: ::prost::alloc::string::String,
    #[prost(enumeration="EntityChangeType", tag="2")]
    pub change_type: i32,
    #[prost(int64, tag="3")]
    pub new_id: i64,
    #[prost(int64, tag="4")]
    pub old_id: i64,
    #[prost(int64, tag="5")]
    pub tenant_id: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct SessionInfoProto {
    #[prost(enumeration="TransportType", tag="1")]
    pub transport: i32,
    #[prost(string, tag="2")]
    pub node_id: ::prost::alloc::string::String,
    #[prost(string, tag="3")]
    pub session_id: ::prost::alloc::string::String,
    #[prost(int64, tag="4")]
    pub tenant_id: i64,
    #[prost(int64, tag="5")]
    pub device_id: i64,
    #[prost(int64, tag="6")]
    pub product_id: i64,
    #[prost(string, tag="7")]
    pub device_name: ::prost::alloc::string::String,
    #[prost(string, tag="8")]
    pub device_type: ::prost::alloc::string::String,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct DeviceSessionEventMsg {
    #[prost(enumeration="SessionType", tag="1")]
    pub r#type: i32,
    #[prost(enumeration="SessionEvent", tag="2")]
    pub event: i32,
    #[prost(message, optional, tag="3")]
    pub session_info: ::core::option::Option<SessionInfoProto>,
}
#[derive(Clone, Copy, PartialEq, ::prost::Message)]
pub struct DeviceDeletedMsg {
    #[prost(int64, tag="1")]
    pub tenant_id: i64,
    #[prost(int64, tag="2")]
    pub device_id: i64,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct HousekeeperTaskRequest {
    #[prost(string, tag="1")]
    pub entity_type: ::prost::alloc::string::String,
    #[prost(int64, tag="2")]
    pub entity_id: i64,
    #[prost(int64, tag="3")]
    pub tenant_id: i64,
    #[prost(enumeration="HousekeeperTaskType", tag="4")]
    pub r#type: i32,
}
#[derive(Clone, PartialEq, ::prost::Message)]
pub struct HousekeeperTaskResponse {
    #[prost(int32, tag="1")]
    pub code: i32,
    #[prost(string, tag="2")]
    pub msg: ::prost::alloc::string::String,
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum EntityChangeType {
    EntityChangeUnset = 0,
    Create = 1,
    Update = 2,
    Delete = 3,
}
impl EntityChangeType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::EntityChangeUnset => "ENTITY_CHANGE_UNSET",
            Self::Create => "Create",
            Self::Update => "Update",
            Self::Delete => "Delete",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "ENTITY_CHANGE_UNSET" => Some(Self::EntityChangeUnset),
            "Create" => Some(Self::Create),
            "Update" => Some(Self::Update),
            "Delete" => Some(Self::Delete),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum LogoutType {
    LogoutUnset = 0,
    Self_ = 1,
    Force = 2,
}
impl LogoutType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::LogoutUnset => "LOGOUT_UNSET",
            Self::Self_ => "Self",
            Self::Force => "Force",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "LOGOUT_UNSET" => Some(Self::LogoutUnset),
            "Self" => Some(Self::Self_),
            "Force" => Some(Self::Force),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum CacheEvictType {
    CacheEvictUnset = 0,
    Normal = 1,
    All = 2,
}
impl CacheEvictType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::CacheEvictUnset => "CACHE_EVICT_UNSET",
            Self::Normal => "Normal",
            Self::All => "All",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "CACHE_EVICT_UNSET" => Some(Self::CacheEvictUnset),
            "Normal" => Some(Self::Normal),
            "All" => Some(Self::All),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum SessionEvent {
    Unset = 0,
    Open = 1,
    Closed = 2,
}
impl SessionEvent {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Unset => "SESSION_EVENT_UNSET",
            Self::Open => "OPEN",
            Self::Closed => "CLOSED",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "SESSION_EVENT_UNSET" => Some(Self::Unset),
            "OPEN" => Some(Self::Open),
            "CLOSED" => Some(Self::Closed),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum SessionType {
    SessionUnset = 0,
    Sync = 1,
    Async = 2,
}
impl SessionType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::SessionUnset => "SESSION_UNSET",
            Self::Sync => "SYNC",
            Self::Async => "ASYNC",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "SESSION_UNSET" => Some(Self::SessionUnset),
            "SYNC" => Some(Self::Sync),
            "ASYNC" => Some(Self::Async),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum TransportType {
    Tcp = 0,
    Mqtt = 1,
    Http = 2,
    Coap = 3,
    Lwm2m = 4,
    Snmp = 5,
    Ws = 6,
}
impl TransportType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::Tcp => "TCP",
            Self::Mqtt => "MQTT",
            Self::Http => "HTTP",
            Self::Coap => "COAP",
            Self::Lwm2m => "LWM2M",
            Self::Snmp => "SNMP",
            Self::Ws => "WS",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "TCP" => Some(Self::Tcp),
            "MQTT" => Some(Self::Mqtt),
            "HTTP" => Some(Self::Http),
            "COAP" => Some(Self::Coap),
            "LWM2M" => Some(Self::Lwm2m),
            "SNMP" => Some(Self::Snmp),
            "WS" => Some(Self::Ws),
            _ => None,
        }
    }
}
#[derive(Clone, Copy, Debug, PartialEq, Eq, Hash, PartialOrd, Ord, ::prost::Enumeration)]
#[repr(i32)]
pub enum HousekeeperTaskType {
    HousekeeperTaskUnset = 0,
    EntityCleanup = 1,
}
impl HousekeeperTaskType {
    /// String value of the enum field names used in the ProtoBuf definition.
    ///
    /// The values are not transformed in any way and thus are considered stable
    /// (if the ProtoBuf definition does not change) and safe for programmatic use.
    pub fn as_str_name(&self) -> &'static str {
        match self {
            Self::HousekeeperTaskUnset => "HOUSEKEEPER_TASK_UNSET",
            Self::EntityCleanup => "ENTITY_CLEANUP",
        }
    }
    /// Creates an enum from field names used in the ProtoBuf definition.
    pub fn from_str_name(value: &str) -> ::core::option::Option<Self> {
        match value {
            "HOUSEKEEPER_TASK_UNSET" => Some(Self::HousekeeperTaskUnset),
            "ENTITY_CLEANUP" => Some(Self::EntityCleanup),
            _ => None,
        }
    }
}
// @@protoc_insertion_point(module)
