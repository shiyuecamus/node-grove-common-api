syntax = "proto3";
package actor; // 定义自己的包名
option go_package = "././pb/actor"; // 指定生成go包的路径

enum EntityChangeType {
  ENTITY_CHANGE_UNSET = 0;
  Create = 1;
  Update = 2;
  Delete = 3;
}

enum LogoutType {
  LOGOUT_UNSET = 0;
  Self = 1;
  Force = 2;
}

enum CacheEvictType {
  CACHE_EVICT_UNSET = 0;
  Normal = 1;
  All = 2;
}

message CacheEvictMsg {
  int32 cacheType = 1;
  CacheEvictType evictType = 2;
  string key = 3;
}

message UserLogoutMsg {
  LogoutType logoutType = 1;
  string accessToken = 2;
}

message EntityChangedMsg {
  string entityType = 1;
  EntityChangeType changeType = 2;
  int64 newId = 3;
  int64 oldId = 4;
  int64 tenantId = 5;
}

enum SessionEvent {
  SESSION_EVENT_UNSET = 0;
  OPEN = 1;
  CLOSED = 2;
}

enum SessionType {
  SESSION_UNSET = 0;
  SYNC = 1;
  ASYNC = 2;
}

enum TransportType {
  TCP = 0;
  MQTT = 1;
  HTTP = 2;
  COAP = 3;
  LWM2M = 4;
  SNMP = 5;
  WS = 6;
}

message SessionInfoProto {
  TransportType transport = 1;
  string nodeId = 2;
  string sessionId = 3;
  int64 tenantId = 4;
  int64 deviceId = 5;
  int64 productId = 6;
  string deviceName = 7;
  string deviceType = 8;
}

message DeviceSessionEventMsg {
  SessionType type = 1;
  SessionEvent event = 2;
  SessionInfoProto sessionInfo = 3;
}

message DeviceDeletedMsg {
  int64 tenantId = 1;
  int64 deviceId = 2;
}

message EntityCleanupRequest {
  string entityType = 1;
  int64 entityId = 2;
}

message EntityCleanupResponse {
  int32 code = 1;
  string msg = 2;
}